version: "3.5"
services:
  api1:
    build: .
    restart: always
    hostname: api1
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rinha?sslmode=disable
      - CACHE_URL=cache:6379
      - PORT=8080
      - ENABLE_SONIC_JSON=1
    volumes:
      - ./prof:/app/prof
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "0.5GB"

  api2:
    build: .
    restart: always
    hostname: api2
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rinha?sslmode=disable
      - CACHE_URL=cache:6379
      - PORT=8080
      - ENABLE_SONIC_JSON=1
    volumes:
      - ./prof:/app/prof
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "0.5GB"

  db:
    image: postgres:15
    hostname: db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: rinha
    ports:
      - "5433:5432"
    expose:
      - "5432"
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: "1GB"
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./scripts/postgres/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 25s
    command:
      [
        "postgres",
        "-c",
        "config_file=/docker-entrypoint-initdb.d/postgresql.conf",
      ]

  nginx:
    image: nginx
    restart: always
    hostname: api
    volumes:
      - ./scripts/nginx/:/etc/nginx/
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"

  cache:
    image: eqalpha/keydb:latest
    hostname: cache
    restart: always
    ports:
      - "6380:6379"
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "0.5GB"
    volumes:
      - ./scripts/keydb/:/etc/keydb/
    command: ["keydb-server", "/etc/keydb/keydb.conf"]

networks:
  default:
    driver: bridge

volumes:
  postgres-db: