version: "3.5"
services:
  api1:
    hostname: api1
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/rinha
      CACHE_URL: cache:6379
      PORT: 8080
      CPU_PROF: /app/prof/cpu-1.prof
      MEM_PROF: /app/prof/mem-1.prof
    ports:
      - "8080:8080"
    volumes:
      - ./prof:/app/prof
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.18'
          memory: '512MB'
  api2:
    hostname: api2
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/rinha
      CACHE_URL: cache:6379
      PORT: 8080
      CPU_PROF: /app/prof/cpu-2.prof
      MEM_PROF: /app/prof/mem-2.prof
    ports:
      - "8081:8080"
    volumes:
      - ./prof:/app/prof
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.18'
          memory: '512MB'
  db:
    hostname: db
    image: postgres:15
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/postgres/:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rinha
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    # command: 'postgres -c max_connections=200 -c shared_buffers=256MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    command:
      [
        "postgres",
        "-c",
        "config_file=/docker-entrypoint-initdb.d/postgresql.conf",
      ]
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'
  cache:
    image: eqalpha/keydb
    hostname: cache
    ports:
      - "6380:6379"
    volumes:
      - ./scripts/keydb/keydb.conf:/etc/keydb/keydb.conf
    command: ["keydb-server", "/etc/keydb/keydb.conf"]
    deploy:
      resources:
        limits:
          cpus: '0.04'
          memory: '100MB'
  nginx:
    hostname: api
    image: nginx:1.15-alpine
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    volumes:
      - ./scripts/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '256MB'
volumes:
  postgres-data: